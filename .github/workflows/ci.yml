name: CI

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: taskmanager_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin' # 'adopt' is deprecated; use 'temurin' or another supported distribution
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Wait for PostgreSQL to start
      run: |
        for i in {1..30}; do
          nc -z localhost 5432 && echo "PostgreSQL is up" && break
          echo "Waiting for PostgreSQL..."
          sleep 1
        done

    - name: Set environment variables
      run: |
        echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/taskmanager_test" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_USERNAME=postgres" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_PASSWORD=postgres" >> $GITHUB_ENV
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV
        # Add other necessary environment variables here

    - name: Clean Test Database
      run: |
        psql -h localhost -U postgres -c "DROP DATABASE IF EXISTS taskmanager_test;"
        psql -h localhost -U postgres -c "CREATE DATABASE taskmanager_test;"
      env:
        PGPASSWORD: postgres

    - name: Run Flyway Migrations
      run: mvn flyway:migrate

    - name: Build with Maven
      run: mvn --batch-mode --update-snapshots clean install

    - name: Run tests
      run: mvn test
